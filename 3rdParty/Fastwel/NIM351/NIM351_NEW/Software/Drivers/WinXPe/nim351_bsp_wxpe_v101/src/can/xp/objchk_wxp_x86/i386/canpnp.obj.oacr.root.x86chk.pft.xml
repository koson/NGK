<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
<OACRDEFECTCOUNT>11</OACRDEFECTCOUNT>
<OACRERRORCOUNT>0</OACRERRORCOUNT>
<DEFECT _seq="1"><SFA><LINE>58</LINE><COLUMN>41</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'ExAllocatePoolWithTag' instead of 'ExAllocatePool'. Reason: No tag interferes with debugging..</DESCRIPTION><FUNCTION>CanCreateDevObj</FUNCTION><FUNCLINE>40</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="2"><SFA><LINE>93</LINE><COLUMN>37</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'ExAllocatePoolWithTag' instead of 'ExAllocatePool'. Reason: No tag interferes with debugging..</DESCRIPTION><FUNCTION>CanCreateDevObj</FUNCTION><FUNCLINE>40</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="3"><SFA><LINE>103</LINE><COLUMN>47</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'ExAllocatePoolWithTag' instead of 'ExAllocatePool'. Reason: No tag interferes with debugging..</DESCRIPTION><FUNCTION>CanCreateDevObj</FUNCTION><FUNCLINE>40</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="4"><SFA><LINE>209</LINE><COLUMN>17</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28107</DEFECTCODE><DESCRIPTION>The Memory 'pNewDevObj' must be held when calling 'IoAttachDeviceToDeviceStack'.</DESCRIPTION><FUNCTION>CanAddDevice</FUNCTION><FUNCLINE>181</FUNCLINE><PATH><SFA><LINE>183</LINE><COLUMN>17</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>184</LINE><COLUMN>17</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>185</LINE><COLUMN>11</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>186</LINE><COLUMN>24</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>188</LINE><COLUMN>2</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>190</LINE><COLUMN>2</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>194</LINE><COLUMN>28</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>202</LINE><COLUMN>11</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>203</LINE><COLUMN>7</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>209</LINE><COLUMN>17</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="5"><SFA><LINE>724</LINE><COLUMN>29</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSERVICE_ROUTINE function:  Add the declaration 'KSERVICE_ROUTINE CanCIsrSw;' before the current first declaration of CanCIsrSw.</DESCRIPTION><FUNCTION>CanFinishStartDevice</FUNCTION><FUNCLINE>649</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="6"><SFA><LINE>748</LINE><COLUMN>47</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanSetResetMode;' before the current first declaration of CanSetResetMode.</DESCRIPTION><FUNCTION>CanFinishStartDevice</FUNCTION><FUNCLINE>649</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="7"><SFA><LINE>902</LINE><COLUMN>29</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSERVICE_ROUTINE function:  Add the declaration 'KSERVICE_ROUTINE CanCIsrSw;' before the current first declaration of CanCIsrSw.</DESCRIPTION><FUNCTION>CanFinishRestartDevice</FUNCTION><FUNCLINE>826</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="8"><SFA><LINE>926</LINE><COLUMN>47</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanSetResetMode;' before the current first declaration of CanSetResetMode.</DESCRIPTION><FUNCTION>CanFinishRestartDevice</FUNCTION><FUNCLINE>826</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="9"><SFA><LINE>1025</LINE><COLUMN>31</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a IO_COMPLETION_ROUTINE function:  Add the declaration 'IO_COMPLETION_ROUTINE CanSyncCompletion;' before the current first declaration of CanSyncCompletion.</DESCRIPTION><FUNCTION>CanStartDevice</FUNCTION><FUNCLINE>1010</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="10"><SFA><LINE>1073</LINE><COLUMN>36</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'ExAllocatePoolWithTag' instead of 'ExAllocatePool'. Reason: No tag interferes with debugging..</DESCRIPTION><FUNCTION>CanDoExternalNaming</FUNCTION><FUNCLINE>1059</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="11"><SFA><LINE>1108</LINE><COLUMN>53</COLUMN><FILENAME>canpnp.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'ExAllocatePoolWithTag' instead of 'ExAllocatePool'. Reason: No tag interferes with debugging..</DESCRIPTION><FUNCTION>CanDoExternalNaming</FUNCTION><FUNCLINE>1059</FUNCLINE><PATH/></DEFECT>
</DEFECTS>
