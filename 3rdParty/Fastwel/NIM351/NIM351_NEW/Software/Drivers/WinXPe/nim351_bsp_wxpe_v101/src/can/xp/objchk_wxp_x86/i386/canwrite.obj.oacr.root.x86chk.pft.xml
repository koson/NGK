<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
<OACRDEFECTCOUNT>25</OACRDEFECTCOUNT>
<OACRERRORCOUNT>0</OACRERRORCOUNT>
<DEFECT _seq="1"><SFA><LINE>53</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanSetResetMode' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanSetResetMode</FUNCTION><FUNCLINE>53</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="2"><SFA><LINE>156</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanGetNextWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanGetNextWrite</FUNCTION><FUNCLINE>156</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="3"><SFA><LINE>229</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanRequestTransmission' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanRequestTransmission</FUNCTION><FUNCLINE>229</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="4"><SFA><LINE>267</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanGrabWriteFromIsr' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanGrabWriteFromIsr</FUNCTION><FUNCLINE>267</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="5"><SFA><LINE>350</LINE><COLUMN>22</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>6290</DEFECTCODE><DESCRIPTION>Bitwise operation on logical result: ! has higher precedence than &amp;. Use &amp;&amp; or (!(x &amp; y)) instead</DESCRIPTION><FUNCTION>CanWrite</FUNCTION><FUNCLINE>333</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="6"><SFA><LINE>333</LINE><COLUMN>9</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanWrite</FUNCTION><FUNCLINE>333</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="7"><SFA><LINE>422</LINE><COLUMN>9</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanStartWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanStartWrite</FUNCTION><FUNCLINE>422</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="8"><SFA><LINE>499</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a DRIVER_CANCEL function:  Add the declaration 'DRIVER_CANCEL CanCancelCurrentWrite;' before the current first declaration of CanCancelCurrentWrite.</DESCRIPTION><FUNCTION>CanStartWrite</FUNCTION><FUNCLINE>422</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="9"><SFA><LINE>510</LINE><COLUMN>51</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanRequestTransmission;' before the current first declaration of CanRequestTransmission.</DESCRIPTION><FUNCTION>CanStartWrite</FUNCTION><FUNCLINE>422</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="10"><SFA><LINE>565</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28167</DEFECTCODE><DESCRIPTION>The function 'CanWriteTimeout' changes the IRQL and does not restore the IRQL before it exits. It should be annotated to reflect the change or the IRQL should be restored. IRQL was last set to 2 at line 574.</DESCRIPTION><FUNCTION>CanWriteTimeout</FUNCTION><FUNCLINE>565</FUNCLINE><PATH><SFA><LINE>567</LINE><COLUMN>24</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>568</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>570</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>571</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>573</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>574</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>576</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>590</LINE><COLUMN>16</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="11"><SFA><LINE>574</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28103</DEFECTCODE><DESCRIPTION>Leaking the CancelSpinLock stored in '#CancelSpinLock'.</DESCRIPTION><FUNCTION>CanWriteTimeout</FUNCTION><FUNCLINE>565</FUNCLINE><PATH><SFA><LINE>567</LINE><COLUMN>24</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>568</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>570</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>571</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>573</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>574</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>576</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>590</LINE><COLUMN>16</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="12"><SFA><LINE>578</LINE><COLUMN>4</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanGrabWriteFromIsr;' before the current first declaration of CanGrabWriteFromIsr.</DESCRIPTION><FUNCTION>CanWriteTimeout</FUNCTION><FUNCLINE>565</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="13"><SFA><LINE>607</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanCancelCurrentWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanCancelCurrentWrite</FUNCTION><FUNCLINE>607</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="14"><SFA><LINE>615</LINE><COLUMN>4</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanGrabWriteFromIsr;' before the current first declaration of CanGrabWriteFromIsr.</DESCRIPTION><FUNCTION>CanCancelCurrentWrite</FUNCTION><FUNCLINE>607</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="15"><SFA><LINE>648</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28167</DEFECTCODE><DESCRIPTION>The function 'CanCompleteWrite' changes the IRQL and does not restore the IRQL before it exits. It should be annotated to reflect the change or the IRQL should be restored. IRQL was last set to 2 at line 658.</DESCRIPTION><FUNCTION>CanCompleteWrite</FUNCTION><FUNCLINE>648</FUNCLINE><PATH><SFA><LINE>650</LINE><COLUMN>24</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>651</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>653</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>654</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>656</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>658</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>660</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>679</LINE><COLUMN>23</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>682</LINE><COLUMN>16</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="16"><SFA><LINE>658</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28103</DEFECTCODE><DESCRIPTION>Leaking the CancelSpinLock stored in '#CancelSpinLock'.</DESCRIPTION><FUNCTION>CanCompleteWrite</FUNCTION><FUNCLINE>648</FUNCLINE><PATH><SFA><LINE>650</LINE><COLUMN>24</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>651</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>653</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>654</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>656</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>658</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>660</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>679</LINE><COLUMN>23</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>682</LINE><COLUMN>16</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="17"><SFA><LINE>658</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28103</DEFECTCODE><DESCRIPTION>Leaking the CancelSpinLock stored in '#CancelSpinLock'.</DESCRIPTION><FUNCTION>CanCompleteWrite</FUNCTION><FUNCLINE>648</FUNCLINE><PATH><SFA><LINE>650</LINE><COLUMN>24</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>651</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>653</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>654</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>656</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>658</LINE><COLUMN>25</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>660</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>662</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>682</LINE><COLUMN>16</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="18"><SFA><LINE>685</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanFinishWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanFinishWrite</FUNCTION><FUNCLINE>685</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="19"><SFA><LINE>696</LINE><COLUMN>47</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanFinishTransmition;' before the current first declaration of CanFinishTransmition.</DESCRIPTION><FUNCTION>CanFinishWrite</FUNCTION><FUNCLINE>685</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="20"><SFA><LINE>701</LINE><COLUMN>8</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanFinishTransmition' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanFinishTransmition</FUNCTION><FUNCLINE>701</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="21"><SFA><LINE>732</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28170</DEFECTCODE><DESCRIPTION>The function 'CanStartQueuedWrite' has been declared to be in a paged segment, but neither PAGED_CODE nor PAGED_CODE_LOCKED was found.</DESCRIPTION><FUNCTION>CanStartQueuedWrite</FUNCTION><FUNCLINE>732</FUNCLINE><PATH/></DEFECT>
<DEFECT _seq="22"><SFA><LINE>757</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28107</DEFECTCODE><DESCRIPTION>The CancelSpinLock '#CancelSpinLock' must be held when calling 'IoReleaseCancelSpinLock'.</DESCRIPTION><FUNCTION>CanStartQueuedWrite</FUNCTION><FUNCLINE>732</FUNCLINE><PATH><SFA><LINE>734</LINE><COLUMN>7</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>736</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>738</LINE><COLUMN>17</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>741</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>749</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>756</LINE><COLUMN>26</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>757</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="23"><SFA><LINE>732</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28167</DEFECTCODE><DESCRIPTION>The function 'CanStartQueuedWrite' changes the IRQL and does not restore the IRQL before it exits. It should be annotated to reflect the change or the IRQL should be restored. IRQL was last set at line 757.</DESCRIPTION><FUNCTION>CanStartQueuedWrite</FUNCTION><FUNCLINE>732</FUNCLINE><PATH><SFA><LINE>734</LINE><COLUMN>7</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>736</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>738</LINE><COLUMN>17</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>741</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>749</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>756</LINE><COLUMN>26</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>757</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="24"><SFA><LINE>751</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28107</DEFECTCODE><DESCRIPTION>The CancelSpinLock '#CancelSpinLock' must be held when calling 'IoReleaseCancelSpinLock'.</DESCRIPTION><FUNCTION>CanStartQueuedWrite</FUNCTION><FUNCLINE>732</FUNCLINE><PATH><SFA><LINE>734</LINE><COLUMN>7</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>736</LINE><COLUMN>2</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>738</LINE><COLUMN>17</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>741</LINE><COLUMN>5</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>749</LINE><COLUMN>12</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><SFA><LINE>751</LINE><COLUMN>27</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA></PATH></DEFECT>
<DEFECT _seq="25"><SFA><LINE>756</LINE><COLUMN>47</COLUMN><FILENAME>canwrite.c</FILENAME><FILEPATH>c:\sergeybromirskiy\work\nim351\can\src\can\xp\</FILEPATH></SFA><DEFECTCODE>28155</DEFECTCODE><DESCRIPTION>The function being assigned or passed should be a KSYNCHRONIZE_ROUTINE function:  Add the declaration 'KSYNCHRONIZE_ROUTINE CanFinishTransmition;' before the current first declaration of CanFinishTransmition.</DESCRIPTION><FUNCTION>CanStartQueuedWrite</FUNCTION><FUNCLINE>732</FUNCLINE><PATH/></DEFECT>
</DEFECTS>
