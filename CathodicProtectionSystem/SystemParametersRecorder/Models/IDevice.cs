using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel;

namespace SystemParametersRecorder.Models
{
    /// <summary>
    /// Определяет параметры которые должны сохранятся в БД
    /// </summary>
    public interface IDevice
    {
        #region Fields And Properties
        /// <summary>
        /// Идентификатор CAN сети
        /// </summary>
        [DisplayName("Id CAN-сети")]
        int CanNetworkId { get; }
        /// <summary>
        /// Наименование CAN сети
        /// </summary>
        string CanNetworkName { get; }
        /// <summary>
        /// Сетевой адрес устройства
        /// </summary>
        /// <param name="?"></param>
        [DisplayName("Адрес")]
        byte NodeId { get; }
        /// <summary>
        /// Расположение устройства
        /// </summary>
        [DisplayName("Месторасположение")]
        string Location { get; }
        /// <summary>
        /// Поляризационный потенциал, В (0x2008)
        /// null - если измерение данного параметра отключено
        /// </summary>
        [DisplayName("Поляризационный потенциал, B")]
        float? PolarisationPotential { get; }
        /// <summary>
        /// Ток поляризации, mA (0x200С)
        /// null - если измерение данного параметра отключено
        /// </summary>
        [DisplayName("Ток поляризации, mA")]
        float? PolarisationCurrent { get; }
        /// <summary>
        /// Защитный потенциал, В (0x2009)
        /// null - если измерение данного параметра отключено
        /// </summary>
        [DisplayName("Защитный потенциал, B")]
        float? ProtectionPotential { get; }
        /// <summary>
        /// Ток катодной защиты, А (0x200B)
        /// null - если измерение данного параметра отключено
        /// </summary>
        [DisplayName("Ток катодной защиты, A")]
        float? ProtectionCurrent { get; }
        /// <summary>
        /// Глубина коррозии (0x200F)
        /// </summary>
        [DisplayName("Глубина коррозии, мкм")]
        UInt32? CorrosionDepth { get;}
        /// <summary>
        /// Скорость коррозии (0x2010)
        /// </summary>
        [DisplayName("Скорость коррозии, мкм/год")]
        UInt32? CorrosionSpeed { get; }

        #endregion
    }
}
